C51 COMPILER V9.54   KEY                                                                   12/16/2019 20:15:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Keil_mdk\C51\BIN\C51.EXE source\src\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\source\inc) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          key_t key;
   4          key_flag_t key_flag;
   5          
   6          /*
   7          * 函数功能:按键初始化
   8          * 函数参数:无
   9          * 函数返回:无
  10          */
  11          void key_init(void)
  12          {
  13   1          P10 = 1;
  14   1          P11 = 1;
  15   1          P12 = 1;
  16   1          P13 = 1;
  17   1      }
  18          
  19          /*
  20          * 函数功能:读取按键键值
  21          * 函数参数:无
  22          * 函数返回:按下的键值
  23          */
  24          static uint8_t read_key(void)
  25          {
  26   1          if(P10 == 0) return 1;
  27   1          if(P11 == 0) return 2;
  28   1          if(P12 == 0) return 3;
  29   1          if(P13 == 0) return 4;       //按键按下记录键值
  30   1          return 0;                   //没有按键按下返回0
  31   1      }
  32          
  33          /*
  34          * 函数功能:按下按键消抖确认
  35          * 函数参数:无
  36          * 函数返回:无
  37          * 注:因为程序简单,按键放在主循环,
  38          *    当程序复杂可以直接放在中断提
  39          *    高按键实时性
  40          */
  41          static void cfm_key(void)
  42          {
  43   1          static uint8_t mand;
  44   1          uint8_t buf = 0;
  45   1          if(tim_flag.key)
  46   1          {
  47   2              tim_flag.key = 0;          //记录值清零
  48   2              buf = read_key();
  49   2              if(mand == buf) 
  50   2              {
  51   3                  key.vlaue = mand;       //确认按键按下,记录键值
  52   3                  mand = 0;
  53   3              }
  54   2              else
C51 COMPILER V9.54   KEY                                                                   12/16/2019 20:15:27 PAGE 2   

  55   2              {
  56   3                  mand = buf;             //更改记录值
  57   3              }
  58   2          }
  59   1      }
  60          
  61          /*
  62          * 函数功能:按键1动作
  63          * 执行日期时间切换操作
  64          */
  65          void k1_act(void)
  66          {
  67   1          led_pcb.back = led_pcb.who;
  68   1          led_pcb.status = 1;
  69   1          if(led_pcb.who) led_pcb.who = 0;
  70   1          else            led_pcb.who = 1;
  71   1          key.vlaue = 0;
  72   1          if(alarm_flag) alarm_flag = 2;
  73   1      }
  74          
  75          /*
  76          * 函数功能:按键2动作
  77          * 12/24 小时显示切换键
  78          */
  79          void k2_act(void)
  80          {
  81   1          if(led_pcb.mode)
  82   1          {
  83   2              led_pcb.mode = 0;
  84   2          }
  85   1          else 
  86   1          {
  87   2              led_pcb.mode = 1;
  88   2          }
  89   1          key.vlaue = 0;
  90   1          if(alarm_flag) alarm_flag = 2;
  91   1      }
  92          
  93          /*
  94          * 函数功能:按键3动作
  95          * 修改时间,日期功能键
  96          */
  97          void k3_act(void)
  98          {
  99   1          if(key.vlaue == 3)
 100   1          {
 101   2              key_flag.k3 += 1;
 102   2              if(key_flag.k3 == 3)
 103   2                  key_flag.k3 = 0;
 104   2              if(alarm_flag) alarm_flag = 2;
 105   2              key.left_count = 0;
 106   2              key.vlaue = 0;
 107   2          }
 108   1      }
 109          
 110          /*
 111          * 函数功能:按键4动作
 112          * 闹钟功能开关控制键
 113          */
 114          void k4_act(void)
 115          {
 116   1          key_flag.k4 = !key_flag.k4;
C51 COMPILER V9.54   KEY                                                                   12/16/2019 20:15:27 PAGE 3   

 117   1          key.vlaue = 0;
 118   1          alarm_flag = 0;
 119   1      }
 120          
 121          /*K1 修改参数时移动光标*/
 122          void k1_chang(void)
 123          {
 124   1          key.vlaue = 0;
 125   1          if(++key.left_count >= 7)
 126   1          {
 127   2              key.left_count = 0;
 128   2          }
 129   1      }
 130          
 131          /*K2 修改参数*/
 132          void k2_chang(void)
 133          {
 134   1          switch (key.left_count)
 135   1          {
 136   2              case 1:year_m.year++;break;
 137   2              case 2:year_m.mons++;break;
 138   2              case 3:year_m.days++;break;
 139   2              case 4:time_m.hou++;break;
 140   2              case 5:time_m.min++;break;
 141   2              case 6:time_m.sec++;break;
 142   2              default:break;
 143   2          }
 144   1          key.vlaue = 0;
 145   1      }
 146          
 147          /*K4 确认修改*/
 148          void k4_sure(void)
 149          {
 150   1          year.days = year_m.days;
 151   1          year.mons = year_m.mons;
 152   1          year.year = year_m.year;
 153   1          time.hou = time_m.hou;
 154   1          time.min = time_m.min;
 155   1          time.sec = time_m.sec;
 156   1          key_flag.k3 = 0;
 157   1          key.left_count = 0;
 158   1          key.vlaue = 0;
 159   1      }
 160          
 161          /*对日期,年份,定时时间进行修改*/
 162          void change_num(void)
 163          {
 164   1          switch(key.vlaue)
 165   1          {
 166   2              case 1:k1_chang();break;
 167   2              case 2:k2_chang();break;
 168   2              case 3:key_flag.k3++;key.vlaue = 0;break;
 169   2              case 4:k4_sure();break;
 170   2              default:break;
 171   2          }
 172   1      }
 173          
 174          /*
 175          * 函数功能:执行按键对应操作
 176          * 函数参数:无
 177          * 函数返回:无
 178          */
C51 COMPILER V9.54   KEY                                                                   12/16/2019 20:15:27 PAGE 4   

 179          void key_action(void)
 180          {
 181   1          cfm_key();          //执行按键获取操作
 182   1      
 183   1          if(key_flag.k3 == 1)     //处于参数修改模式
 184   1          {
 185   2              change_num();
 186   2          }
 187   1          else if(key_flag.k3 == 0)
 188   1          {
 189   2              switch (key.vlaue)
 190   2              {
 191   3                  case 1:k1_act();break;
 192   3                  case 2:k2_act();break;
 193   3                  case 4:k4_act();break;
 194   3                  default: break;
 195   3              }
 196   2          }
 197   1          k3_act();
 198   1      }
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          
 211          
 212          
 213          
 214          
 215          
 216          
 217          
 218          
 219          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
